; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\ouput\spi_enc28j60.o --depend=.\ouput\spi_enc28j60.d --cpu=Cortex-M3 --apcs=interwork -I.\Source\APP -I.\Source\FWLib\cm3 -I.\Source\FWLib\inc -I.\Source\BSP -I.\Source\FWLib -I.\Source\Startup -I.\Source\uCOS-II\Source -I.\Source\uCOS-II\uC-CPU -I.\Source\uCOS-II\uC-LIB -I.\Source\uCOS-II\Ports -I.\Source\uCGUI\Config -I.\Source\uCGUI\emWinDemo -I.\Source\uCGUI\LCDDriver -I.\Source\uCGUI\uCGUIDemo -I.\Source\uCGUI\LCDDriver\Touch -I.\Source\uCOS-II\Source -I.\Source\uCGUI\Core -I.\Source\uCGUI\WM -I.\Source\uCGUI\Widget -I.\Source\uCGUI\GUIDemo -I.\Source\SDHC\driver -I.\Source\SDHC\fatfs -I.\Source\gui_app -I.\Source\gui_app\pinyin -I.\Source\uCGUI\TouchCalibration -I.\Source\Mot -I.\Source\Net -I.\Source\STM32F10x_DSP_Lib\src\asm\arm -I.\Source\STM32F10x_DSP_Lib\inc -I..\..\..\STM32F4\STM32F4xx_DSP_StdPeriph_Lib_V1.0.1\Libraries\CMSIS\Lib\ARM -I..\..\..\STM32F4\STM32F4xx_DSP_StdPeriph_Lib_V1.0.1\Libraries\CMSIS\Include -I.\Source\Lib -ID:\Keil_ARM\ARM\INC -ID:\Keil_ARM\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_XL -DUSE_STDPERIPH_DRIVER -DARM_MATH_CM3 --omf_browse=.\ouput\spi_enc28j60.crf Source\Net\spi_enc28j60.c]
                          THUMB

                          AREA ||i.SPI2_ReadWrite||, CODE, READONLY, ALIGN=2

                  SPI2_ReadWrite PROC
;;;81      */
;;;82     unsigned char	SPI2_ReadWrite(unsigned char writedat)
000000  b570              PUSH     {r4-r6,lr}
;;;83     {
;;;84     	/* Loop while DR register in not emplty */
;;;85     	while(SPI_I2S_GetFlagStatus(SPI2,SPI_I2S_FLAG_TXE) == RESET);
000002  4c0b              LDR      r4,|L1.48|
000004  4605              MOV      r5,r0                 ;83
                  |L1.6|
000006  2102              MOVS     r1,#2
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       SPI_I2S_GetFlagStatus
00000e  2800              CMP      r0,#0
000010  d0f9              BEQ      |L1.6|
;;;86     	
;;;87     	/* Send byte through the SPI1 peripheral */
;;;88     	SPI_I2S_SendData(SPI2, writedat);
000012  4629              MOV      r1,r5
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       SPI_I2S_SendData
                  |L1.26|
;;;89     	
;;;90     	/* Wait to receive a byte */
;;;91     	while(SPI_I2S_GetFlagStatus(SPI2, SPI_I2S_FLAG_RXNE) == RESET);
00001a  2101              MOVS     r1,#1
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       SPI_I2S_GetFlagStatus
000022  2800              CMP      r0,#0
000024  d0f9              BEQ      |L1.26|
;;;92     	
;;;93     	/* Return the byte read from the SPI bus */
;;;94     	return SPI_I2S_ReceiveData(SPI2);
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       SPI_I2S_ReceiveData
00002c  b2c0              UXTB     r0,r0
;;;95     }
00002e  bd70              POP      {r4-r6,pc}
;;;96     
                          ENDP

                  |L1.48|
                          DCD      0x40003800

                          AREA ||i.SPI_Enc28j60_Init||, CODE, READONLY, ALIGN=2

                  SPI_Enc28j60_Init PROC
;;;26      */																						  
;;;27     void SPI_Enc28j60_Init(void)
000000  b570              PUSH     {r4-r6,lr}
;;;28     {
000002  b086              SUB      sp,sp,#0x18
;;;29     	GPIO_InitTypeDef GPIO_InitStructure;
;;;30     	SPI_InitTypeDef  SPI_InitStructure;	
;;;31     	
;;;32     	/* 使能 SPI1 时钟 */                         
;;;33     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB , ENABLE);
000004  2101              MOVS     r1,#1
000006  2008              MOVS     r0,#8
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;34     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_SPI2 , ENABLE);
00000c  2101              MOVS     r1,#1
00000e  0388              LSLS     r0,r1,#14
000010  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;35     
;;;36     	/* ---------enc28j60 通信I/O初始化----------------
;;;37     	 * PA5-SPI1-SCK :ENC28J60_SCK
;;;38     	 * PA6-SPI1-MISO:ENC28J60_SO
;;;39     	 * PA7-SPI1-MOSI:ENC28J60_SI	 
;;;40     	 */
;;;41     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13 | GPIO_Pin_14|GPIO_Pin_15;
000014  f44f4060          MOV      r0,#0xe000
000018  f8ad0014          STRH     r0,[sp,#0x14]
;;;42     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
00001c  2501              MOVS     r5,#1
00001e  f88d5016          STRB     r5,[sp,#0x16]
;;;43     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;		   // 复用输出
000022  2018              MOVS     r0,#0x18
;;;44     	GPIO_Init(GPIOB, &GPIO_InitStructure);
000024  4e1c              LDR      r6,|L2.152|
000026  f88d0017          STRB     r0,[sp,#0x17]         ;43
00002a  a905              ADD      r1,sp,#0x14
00002c  4630              MOV      r0,r6
00002e  f7fffffe          BL       GPIO_Init
;;;45     
;;;46     	/* ---------enc28j60 控制I/O初始化----------------*/
;;;47     	/* PA4-SPI1-NSS:ENC28J60_CS */ 											 // 片选
;;;48       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
000032  032c              LSLS     r4,r5,#12
000034  f8ad4014          STRH     r4,[sp,#0x14]
;;;49       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
000038  f88d5016          STRB     r5,[sp,#0x16]
;;;50       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	   // 推免输出
00003c  2510              MOVS     r5,#0x10
00003e  f88d5017          STRB     r5,[sp,#0x17]
;;;51       GPIO_Init(GPIOB, &GPIO_InitStructure);						  
000042  a905              ADD      r1,sp,#0x14
000044  4630              MOV      r0,r6
000046  f7fffffe          BL       GPIO_Init
;;;52       GPIO_SetBits(GPIOB, GPIO_Pin_12);										 // 先把片选拉高，真正用的时候再拉低
00004a  4621              MOV      r1,r4
00004c  4630              MOV      r0,r6
00004e  f7fffffe          BL       GPIO_SetBits
;;;53     
;;;54     	/* PB13:ENC28J60_INT */						// 中断引脚没用到
;;;55     
;;;56     	/* PE1:ENC28J60_RST*/				      // 复位似乎不用也可以
;;;57      
;;;58     
;;;59     	/* SPI1 配置 */ 
;;;60     	SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;
000052  2000              MOVS     r0,#0
000054  f8ad0000          STRH     r0,[sp,#0]
;;;61     	SPI_InitStructure.SPI_Mode = SPI_Mode_Master;
000058  f44f7182          MOV      r1,#0x104
00005c  f8ad1002          STRH     r1,[sp,#2]
;;;62     	SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b;
;;;63     	SPI_InitStructure.SPI_CPOL = SPI_CPOL_Low;
;;;64     	SPI_InitStructure.SPI_CPHA = SPI_CPHA_1Edge;
000060  f8ad0008          STRH     r0,[sp,#8]
000064  f8ad0004          STRH     r0,[sp,#4]            ;62
;;;65     	SPI_InitStructure.SPI_NSS = SPI_NSS_Soft;
000068  10e1              ASRS     r1,r4,#3
;;;66     	SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_8;
00006a  f8ad500c          STRH     r5,[sp,#0xc]
00006e  f8ad0006          STRH     r0,[sp,#6]            ;63
;;;67     	SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_MSB;
000072  f8ad000e          STRH     r0,[sp,#0xe]
;;;68     	SPI_InitStructure.SPI_CRCPolynomial = 7;
000076  2007              MOVS     r0,#7
;;;69     	SPI_Init(SPI2, &SPI_InitStructure);
000078  4c08              LDR      r4,|L2.156|
00007a  f8ad100a          STRH     r1,[sp,#0xa]          ;65
00007e  f8ad0010          STRH     r0,[sp,#0x10]         ;68
000082  4669              MOV      r1,sp
000084  4620              MOV      r0,r4
000086  f7fffffe          BL       SPI_Init
;;;70     	
;;;71     	/* 使能 SPI1  */
;;;72     	SPI_Cmd(SPI2, ENABLE); 
00008a  2101              MOVS     r1,#1
00008c  4620              MOV      r0,r4
00008e  f7fffffe          BL       SPI_Cmd
;;;73     }
000092  b006              ADD      sp,sp,#0x18
000094  bd70              POP      {r4-r6,pc}
;;;74     
                          ENDP

000096  0000              DCW      0x0000
                  |L2.152|
                          DCD      0x40010c00
                  |L2.156|
                          DCD      0x40003800

;*** Start embedded assembler ***

#line 1 "Source\\Net\\spi_enc28j60.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___14_spi_enc28j60_c_f796370f____REV16|
#line 114 "..\\..\\..\\STM32F4\\STM32F4xx_DSP_StdPeriph_Lib_V1.0.1\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_spi_enc28j60_c_f796370f____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___14_spi_enc28j60_c_f796370f____REVSH|
#line 128
|__asm___14_spi_enc28j60_c_f796370f____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
