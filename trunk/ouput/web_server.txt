; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\ouput\web_server.o --depend=.\ouput\web_server.d --cpu=Cortex-M3 --apcs=interwork -I.\Source\APP -I.\Source\FWLib\cm3 -I.\Source\FWLib\inc -I.\Source\BSP -I.\Source\FWLib -I.\Source\Startup -I.\Source\uCOS-II\Source -I.\Source\uCOS-II\uC-CPU -I.\Source\uCOS-II\uC-LIB -I.\Source\uCOS-II\Ports -I.\Source\uCGUI\Config -I.\Source\uCGUI\emWinDemo -I.\Source\uCGUI\LCDDriver -I.\Source\uCGUI\uCGUIDemo -I.\Source\uCGUI\LCDDriver\Touch -I.\Source\uCOS-II\Source -I.\Source\uCGUI\Core -I.\Source\uCGUI\WM -I.\Source\uCGUI\Widget -I.\Source\uCGUI\GUIDemo -I.\Source\SDHC\driver -I.\Source\SDHC\fatfs -I.\Source\gui_app -I.\Source\gui_app\pinyin -I.\Source\uCGUI\TouchCalibration -I.\Source\Mot -I.\Source\Net -I.\Source\STM32F10x_DSP_Lib\src\asm\arm -I.\Source\STM32F10x_DSP_Lib\inc -I..\..\..\STM32F4\STM32F4xx_DSP_StdPeriph_Lib_V1.0.1\Libraries\CMSIS\Lib\ARM -I..\..\..\STM32F4\STM32F4xx_DSP_StdPeriph_Lib_V1.0.1\Libraries\CMSIS\Include -I.\Source\Lib -ID:\Keil_ARM\ARM\INC -ID:\Keil_ARM\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_XL -DUSE_STDPERIPH_DRIVER -DARM_MATH_CM3 --omf_browse=.\ouput\web_server.crf Source\Net\web_server.c]
                          THUMB

                          AREA ||i.Web_Server||, CODE, READONLY, ALIGN=2

                  Web_Server PROC
;;;165     */
;;;166    int Web_Server(void)
000000  2500              MOVS     r5,#0
;;;167    {   
;;;168    	unsigned int plen, i1 = 0;
;;;169    	unsigned int dat_p;
;;;170    	unsigned char i = 0;
;;;171    	char  *buf1;
;;;172    	char cmd;
;;;173    	unsigned int payloadlen = 0;
;;;174      
;;;175      /* 初始化 enc28j60 的MAC地址(物理地址),这个函数必须要调用一次 */
;;;176      enc28j60Init(mymac);
000002  4851              LDR      r0,|L1.328|
000004  f7fffffe          BL       enc28j60Init
;;;177    
;;;178    	/* PHY LED 配置,LED用来指示通信的状态 */	
;;;179      enc28j60PhyWrite(PHLCON,0x476);	
000008  f2404176          MOV      r1,#0x476
00000c  2014              MOVS     r0,#0x14
00000e  f7fffffe          BL       enc28j60PhyWrite
;;;180    	
;;;181    	/* 将enc28j60第三引脚的时钟输出改为：from 6.25MHz to 12.5MHz(本例程该引脚NC,没用到) */	
;;;182      //enc28j60clkout(2);    
;;;183      
;;;184    	/* 初始化以太网 IP 层 */									  
;;;185      init_ip_arp_udp_tcp(mymac,myip,mywwwport);
000012  4e4d              LDR      r6,|L1.328|
000014  3e08              SUBS     r6,r6,#8
000016  4631              MOV      r1,r6
000018  6870              LDR      r0,[r6,#4]  ; mywwwport
00001a  b2c2              UXTB     r2,r0
00001c  484a              LDR      r0,|L1.328|
00001e  f7fffffe          BL       init_ip_arp_udp_tcp
;;;186    
;;;187    
;;;188      
;;;189    
;;;190      while(1)
;;;191      {  
;;;192      	  
;;;193     	//	tftp_timer();
;;;194    
;;;195    	  
;;;196    	   
;;;197    			// get the next new packet:			
;;;198          plen = enc28j60PacketReceive(BUFFER_SIZE, buf);      
000022  4f4a              LDR      r7,|L1.332|
000024  f24058dc          MOV      r8,#0x5dc
                  |L1.40|
000028  4948              LDR      r1,|L1.332|
00002a  4640              MOV      r0,r8
00002c  f7fffffe          BL       enc28j60PacketReceive
000030  0004              MOVS     r4,r0
;;;199          
;;;200          // plen will ne unequal to zero if there is a valid packet (without crc error)			
;;;201          if(plen==0)
000032  d0f9              BEQ      |L1.40|
;;;202          {
;;;203              continue;	  // 结束本次循环
;;;204          }
;;;205    
;;;206          // arp is broadcast if unknown but a host may also
;;;207          // verify the mac address by sending it to 
;;;208          // a unicast address.		     
;;;209          if(eth_type_is_arp_and_my_ip(buf,plen))
000034  4601              MOV      r1,r0
000036  4845              LDR      r0,|L1.332|
000038  f7fffffe          BL       eth_type_is_arp_and_my_ip
00003c  b118              CBZ      r0,|L1.70|
;;;210          {
;;;211              make_arp_answer_from_request(buf);          
00003e  4843              LDR      r0,|L1.332|
000040  f7fffffe          BL       make_arp_answer_from_request
;;;212              continue;
000044  e7f0              B        |L1.40|
                  |L1.70|
;;;213          }
;;;214          
;;;215          // check if ip packets are for us:			
;;;216          if(eth_type_is_ip_and_my_ip(buf,plen)==0) 
000046  4621              MOV      r1,r4
000048  4840              LDR      r0,|L1.332|
00004a  f7fffffe          BL       eth_type_is_ip_and_my_ip
00004e  2800              CMP      r0,#0
000050  d0ea              BEQ      |L1.40|
;;;217          {
;;;218              continue;
;;;219          }      
;;;220          
;;;221          if(buf[IP_PROTO_P]==IP_PROTO_ICMP_V && buf[ICMP_TYPE_P]==ICMP_TYPE_ECHOREQUEST_V)
000052  7df8              LDRB     r0,[r7,#0x17]  ; buf
000054  2801              CMP      r0,#1
000056  d00f              BEQ      |L1.120|
;;;222          {
;;;223              // a ping packet, let's send pong  DOS 下的 ping 命令包		 
;;;224              make_echo_reply_from_request(buf, plen);          
;;;225              continue;
;;;226          }
;;;227    
;;;228    /*-----------------tcp port www start, compare only the lower byte-----------------------------------*/
;;;229          if (buf[IP_PROTO_P]==IP_PROTO_TCP_V&&buf[TCP_DST_PORT_H_P]==0&&buf[TCP_DST_PORT_L_P]==mywwwport)
000058  2806              CMP      r0,#6
00005a  d016              BEQ      |L1.138|
;;;230          {
;;;231              if (buf[TCP_FLAGS_P] & TCP_FLAGS_SYN_V)
;;;232              {
;;;233                  make_tcp_synack_from_syn(buf);
;;;234                  // make_tcp_synack_from_syn does already send the syn,ack
;;;235                  continue;
;;;236              }
;;;237              if (buf[TCP_FLAGS_P] & TCP_FLAGS_ACK_V)
;;;238              {
;;;239                  init_len_info(buf); // init some data structures
;;;240                  // we can possibly have no data, just ack:
;;;241                  dat_p=get_tcp_data_pointer();
;;;242                  if (dat_p==0)
;;;243                  {
;;;244                      if (buf[TCP_FLAGS_P] & TCP_FLAGS_FIN_V)
;;;245                      {
;;;246                          // finack, answer with ack
;;;247                          make_tcp_ack_from_any(buf);
;;;248                      }
;;;249                      // just an ack with no data, wait for next packet
;;;250                      continue;
;;;251                  }
;;;252                  if (strncmp("GET ",(char *)&(buf[dat_p]),4)!=0)
;;;253                  {
;;;254                      // head, post and other methods:
;;;255                      //
;;;256                      // for possible status codes see:
;;;257                      // http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
;;;258                      plen=fill_tcp_data_p(buf,0,PSTR("HTTP/1.0 200 OK\r\nContent-Type: text/html\r\n\r\n<h1>200 OK</h1>"));
;;;259                      goto SENDTCP;
;;;260                  }
;;;261                  if (strncmp("/ ",(char *)&(buf[dat_p+4]),2)==0)
;;;262                  {
;;;263                      plen=fill_tcp_data_p(buf,0,PSTR("HTTP/1.0 200 OK\r\nContent-Type: text/html\r\n\r\n"));
;;;264                      plen=fill_tcp_data_p(buf,plen,PSTR("<p>Usage: "));
;;;265                      plen=fill_tcp_data(buf,plen,baseurl);
;;;266                      plen=fill_tcp_data_p(buf,plen,PSTR("password</p>"));
;;;267                      goto SENDTCP;
;;;268                  }
;;;269                  cmd=analyse_get_url((char *)&(buf[dat_p+5]));
;;;270                  // for possible status codes see:
;;;271                  // http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
;;;272                  if (cmd == -1)
;;;273                  {
;;;274                      plen=fill_tcp_data_p(buf,0,PSTR("HTTP/1.0 401 Unauthorized\r\nContent-Type: text/html\r\n\r\n<h1>401 Unauthorized</h1>"));
;;;275                      goto SENDTCP;
;;;276                  }
;;;277                  if (cmd==1)	           // 用户程序
;;;278                  {			
;;;279    								//	LED1(ON);
;;;280                      i=1;							 // 命令 = 1
;;;281                  }
;;;282                  if (cmd==0)						 // 用户程序
;;;283                  {									
;;;284    								//	LED1(OFF);
;;;285                      i=0;							 // 命令 = 0
;;;286                  }
;;;287                  // if (cmd==-2) or any other value
;;;288                  // just display the status:
;;;289                  plen=print_webpage(buf,(i));
;;;290                  
;;;291                  SENDTCP:
;;;292                  make_tcp_ack_from_any(buf);       // send ack for http get
;;;293                  make_tcp_ack_with_data(buf,plen); // send data
;;;294                  continue;
;;;295              }
;;;296          }
;;;297    /*-------------------------------------- tcp port www end ---------------------------------------*/
;;;298    
;;;299    /*--------------------- udp start, we listen on udp port 1200=0x4B0 -----------------------------
;;;300          if (buf[IP_PROTO_P]==IP_PROTO_UDP_V&&buf[UDP_DST_PORT_H_P]==4&&buf[UDP_DST_PORT_L_P]==0xb0)
;;;301          {
;;;302              payloadlen=	  buf[UDP_LEN_H_P];
;;;303              payloadlen=payloadlen<<8;
;;;304              payloadlen=(payloadlen+buf[UDP_LEN_L_P])-UDP_HEADER_LEN;
;;;305              //payloadlen=buf[UDP_LEN_L_P]-UDP_HEADER_LEN;
;;;306              
;;;307              ANSWER:
;;;308              //while(1){
;;;309              for(i1=0; i1<payloadlen; i1++) buf1[i1]=buf[UDP_DATA_P+i1];
;;;310              
;;;311              //make_udp_reply_from_request(buf,str,strlen(str),myudpport);
;;;312              make_udp_reply_from_request(buf,buf1,payloadlen,myudpport);          
;;;313              //}
;;;314          }
;;;315    /*----------------------------------------udp end -----------------------------------------------*/
;;;316    
;;;317    /*----------------------------------------tftp---------------------------------------------------*/
;;;318    	 if (buf[IP_PROTO_P]==IP_PROTO_UDP_V&&buf[UDP_DST_PORT_H_P]==0x00&&buf[UDP_DST_PORT_L_P]==0x45)
00005c  2811              CMP      r0,#0x11
00005e  d1e3              BNE      |L1.40|
000060  f8970024          LDRB     r0,[r7,#0x24]  ; buf
000064  2800              CMP      r0,#0
000066  d1df              BNE      |L1.40|
000068  f8970025          LDRB     r0,[r7,#0x25]  ; buf
00006c  2845              CMP      r0,#0x45
00006e  d1db              BNE      |L1.40|
;;;319    	 {
;;;320    		
;;;321    	 tftp_exc(buf);	  
000070  4836              LDR      r0,|L1.332|
000072  f7fffffe          BL       tftp_exc
000076  e7d7              B        |L1.40|
                  |L1.120|
000078  f8970022          LDRB     r0,[r7,#0x22]         ;221  ; buf
00007c  2808              CMP      r0,#8                 ;221
00007e  d1d3              BNE      |L1.40|
000080  4621              MOV      r1,r4                 ;224
000082  4832              LDR      r0,|L1.332|
000084  f7fffffe          BL       make_echo_reply_from_request
000088  e7ce              B        |L1.40|
                  |L1.138|
00008a  f8970024          LDRB     r0,[r7,#0x24]         ;229  ; buf
00008e  2800              CMP      r0,#0                 ;229
000090  d1ca              BNE      |L1.40|
000092  f8970025          LDRB     r0,[r7,#0x25]         ;229  ; buf
000096  6871              LDR      r1,[r6,#4]            ;229  ; mywwwport
000098  4288              CMP      r0,r1                 ;229
00009a  d1c5              BNE      |L1.40|
00009c  f897002f          LDRB     r0,[r7,#0x2f]         ;231  ; buf
0000a0  0781              LSLS     r1,r0,#30             ;231
0000a2  d503              BPL      |L1.172|
0000a4  4829              LDR      r0,|L1.332|
0000a6  f7fffffe          BL       make_tcp_synack_from_syn
0000aa  e7bd              B        |L1.40|
                  |L1.172|
0000ac  06c0              LSLS     r0,r0,#27             ;237
0000ae  d5bb              BPL      |L1.40|
0000b0  4826              LDR      r0,|L1.332|
0000b2  f7fffffe          BL       init_len_info
0000b6  f7fffffe          BL       get_tcp_data_pointer
0000ba  b148              CBZ      r0,|L1.208|
0000bc  183c              ADDS     r4,r7,r0              ;252
0000be  2204              MOVS     r2,#4                 ;252
0000c0  4621              MOV      r1,r4                 ;252
0000c2  a023              ADR      r0,|L1.336|
0000c4  f7fffffe          BL       strncmp
0000c8  b150              CBZ      r0,|L1.224|
0000ca  a223              ADR      r2,|L1.344|
0000cc  2100              MOVS     r1,#0                 ;258
0000ce  e026              B        |L1.286|
                  |L1.208|
0000d0  f897002f          LDRB     r0,[r7,#0x2f]         ;244  ; buf
0000d4  07c0              LSLS     r0,r0,#31             ;244
0000d6  d0a7              BEQ      |L1.40|
0000d8  481c              LDR      r0,|L1.332|
0000da  f7fffffe          BL       make_tcp_ack_from_any
0000de  e7a3              B        |L1.40|
                  |L1.224|
0000e0  1d21              ADDS     r1,r4,#4              ;261
0000e2  2202              MOVS     r2,#2                 ;261
0000e4  a02b              ADR      r0,|L1.404|
0000e6  f7fffffe          BL       strncmp
0000ea  b130              CBZ      r0,|L1.250|
0000ec  1d60              ADDS     r0,r4,#5              ;269
0000ee  f7fffffe          BL       analyse_get_url
0000f2  2801              CMP      r0,#1                 ;277
0000f4  d017              BEQ      |L1.294|
0000f6  b1c0              CBZ      r0,|L1.298|
0000f8  e018              B        |L1.300|
                  |L1.250|
0000fa  a227              ADR      r2,|L1.408|
0000fc  2100              MOVS     r1,#0                 ;263
0000fe  4813              LDR      r0,|L1.332|
000100  f7fffffe          BL       fill_tcp_data_p
000104  4601              MOV      r1,r0                 ;263
000106  a230              ADR      r2,|L1.456|
000108  4810              LDR      r0,|L1.332|
00010a  f7fffffe          BL       fill_tcp_data_p
00010e  4a0e              LDR      r2,|L1.328|
000110  4601              MOV      r1,r0                 ;264
000112  320d              ADDS     r2,r2,#0xd            ;265
000114  480d              LDR      r0,|L1.332|
000116  f7fffffe          BL       fill_tcp_data
00011a  4601              MOV      r1,r0                 ;265
00011c  a22d              ADR      r2,|L1.468|
                  |L1.286|
00011e  480b              LDR      r0,|L1.332|
000120  f7fffffe          BL       fill_tcp_data_p
000124  e006              B        |L1.308|
                  |L1.294|
000126  2501              MOVS     r5,#1                 ;280
000128  e000              B        |L1.300|
                  |L1.298|
00012a  2500              MOVS     r5,#0                 ;285
                  |L1.300|
00012c  4629              MOV      r1,r5                 ;289
00012e  4807              LDR      r0,|L1.332|
000130  f7fffffe          BL       print_webpage
                  |L1.308|
000134  4604              MOV      r4,r0                 ;289
000136  4805              LDR      r0,|L1.332|
000138  f7fffffe          BL       make_tcp_ack_from_any
00013c  4621              MOV      r1,r4                 ;293
00013e  4803              LDR      r0,|L1.332|
000140  f7fffffe          BL       make_tcp_ack_with_data
000144  e770              B        |L1.40|
;;;322    	 
;;;323    	 }
;;;324    	 
;;;325         
;;;326      }
;;;327              return (0);
;;;328    }
;;;329    /******************* (C) COPYRIGHT 2011 野火嵌入式开发工作室 *****END OF FILE****/
                          ENDP

000146  0000              DCW      0x0000
                  |L1.328|
                          DCD      ||.data||+0x8
                  |L1.332|
                          DCD      ||.bss||
                  |L1.336|
000150  47455420          DCB      "GET ",0
000154  00      
000155  00                DCB      0
000156  00                DCB      0
000157  00                DCB      0
                  |L1.344|
000158  48545450          DCB      "HTTP/1.0 200 OK\r\nContent-Type: text/html\r\n\r\n<h1>2"
00015c  2f312e30
000160  20323030
000164  204f4b0d
000168  0a436f6e
00016c  74656e74
000170  2d547970
000174  653a2074
000178  6578742f
00017c  68746d6c
000180  0d0a0d0a
000184  3c68313e
000188  32      
000189  3030204f          DCB      "00 OK</h1>",0
00018d  4b3c2f68
000191  313e00  
                  |L1.404|
000194  2f2000            DCB      "/ ",0
000197  00                DCB      0
                  |L1.408|
000198  48545450          DCB      "HTTP/1.0 200 OK\r\nContent-Type: text/html\r\n\r\n",0
00019c  2f312e30
0001a0  20323030
0001a4  204f4b0d
0001a8  0a436f6e
0001ac  74656e74
0001b0  2d547970
0001b4  653a2074
0001b8  6578742f
0001bc  68746d6c
0001c0  0d0a0d0a
0001c4  00      
0001c5  00                DCB      0
0001c6  00                DCB      0
0001c7  00                DCB      0
                  |L1.456|
0001c8  3c703e55          DCB      "<p>Usage: ",0
0001cc  73616765
0001d0  3a2000  
0001d3  00                DCB      0
                  |L1.468|
0001d4  70617373          DCB      "password</p>",0
0001d8  776f7264
0001dc  3c2f703e
0001e0  00      
0001e1  00                DCB      0
0001e2  00                DCB      0
0001e3  00                DCB      0

                          AREA ||i.analyse_get_url||, CODE, READONLY, ALIGN=1

                  analyse_get_url PROC
;;;81      */
;;;82     char analyse_get_url(char *str)
000000  b570              PUSH     {r4-r6,lr}
;;;83     {
000002  4604              MOV      r4,r0
;;;84         unsigned char i=0;
000004  2500              MOVS     r5,#0
;;;85         if (verify_password(str)==0)
000006  f7fffffe          BL       verify_password
00000a  b930              CBNZ     r0,|L2.26|
;;;86         {
;;;87             return(-1);
00000c  20ff              MOVS     r0,#0xff
;;;88         }
;;;89         // find first "/"
;;;90         // passw not longer than 9 char:
;;;91         while(*str && i<10 && *str >',' && *str<'{')
;;;92         {
;;;93             if (*str=='/')
;;;94             {
;;;95                 str++;
;;;96                 break;
;;;97             }
;;;98             i++;
;;;99             str++;
;;;100        }
;;;101        if (*str < 0x3a && *str > 0x2f)
;;;102        {
;;;103            // is a ASCII number, return it
;;;104            return(*str-0x30);
;;;105        }
;;;106        return(-2);
;;;107    }
00000e  bd70              POP      {r4-r6,pc}
                  |L2.16|
000010  282f              CMP      r0,#0x2f              ;93
000012  d010              BEQ      |L2.54|
000014  1c6d              ADDS     r5,r5,#1              ;98
000016  b2ed              UXTB     r5,r5                 ;98
000018  1c64              ADDS     r4,r4,#1              ;99
                  |L2.26|
00001a  7820              LDRB     r0,[r4,#0]            ;91
00001c  b128              CBZ      r0,|L2.42|
00001e  2d0a              CMP      r5,#0xa               ;91
000020  d203              BCS      |L2.42|
000022  282c              CMP      r0,#0x2c              ;91
000024  d901              BLS      |L2.42|
000026  287b              CMP      r0,#0x7b              ;91
000028  d3f2              BCC      |L2.16|
                  |L2.42|
00002a  7820              LDRB     r0,[r4,#0]            ;101
00002c  3830              SUBS     r0,r0,#0x30           ;101
00002e  280a              CMP      r0,#0xa               ;101
000030  d203              BCS      |L2.58|
000032  b2c0              UXTB     r0,r0                 ;104
000034  bd70              POP      {r4-r6,pc}
                  |L2.54|
000036  1c64              ADDS     r4,r4,#1              ;95
000038  e7f7              B        |L2.42|
                  |L2.58|
00003a  20fe              MOVS     r0,#0xfe              ;106
00003c  bd70              POP      {r4-r6,pc}
;;;108    
                          ENDP


                          AREA ||i.print_webpage||, CODE, READONLY, ALIGN=2

                  print_webpage PROC
;;;116     */
;;;117    unsigned int print_webpage(unsigned char *buf,unsigned char on_off)
000000  b570              PUSH     {r4-r6,lr}
;;;118    {
000002  460d              MOV      r5,r1
000004  4604              MOV      r4,r0
;;;119        unsigned int plen;
;;;120    		/* 新建一个网页，就像新建一个文件一样 */
;;;121        plen=fill_tcp_data_p(buf,0,PSTR("HTTP/1.0 200 OK\r\nContent-Type: text/html\r\nPragma: no-cache\r\n\r\n"));
000006  a220              ADR      r2,|L3.136|
000008  2100              MOVS     r1,#0
00000a  f7fffffe          BL       fill_tcp_data_p
00000e  4601              MOV      r1,r0
;;;122    	
;;;123    		/* 在网页正中央填写信息 */
;;;124        plen=fill_tcp_data_p(buf,plen,PSTR("<center><p> LED状态指示: "));
000010  a22d              ADR      r2,|L3.200|
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       fill_tcp_data_p
000018  4601              MOV      r1,r0
;;;125    
;;;126        if (on_off)
00001a  b10d              CBZ      r5,|L3.32|
;;;127        {
;;;128            plen=fill_tcp_data_p(buf,plen,PSTR("<font color=\"#00FF00\"> 亮</font>"));
00001c  a231              ADR      r2,|L3.228|
00001e  e000              B        |L3.34|
                  |L3.32|
;;;129        }
;;;130        else
;;;131        {
;;;132            plen=fill_tcp_data_p(buf,plen,PSTR("灭"));
000020  a239              ADR      r2,|L3.264|
                  |L3.34|
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       fill_tcp_data_p
000028  4601              MOV      r1,r0
;;;133        }
;;;134    
;;;135        plen=fill_tcp_data_p(buf,plen,PSTR(" <small><a href=\""));
00002a  a238              ADR      r2,|L3.268|
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       fill_tcp_data_p
000032  4601              MOV      r1,r0
;;;136        plen=fill_tcp_data(buf,plen,baseurl);		 // 要在浏览器中输入的网址
000034  4a3a              LDR      r2,|L3.288|
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       fill_tcp_data
;;;137        plen=fill_tcp_data(buf,plen,password);	 // 紧跟在网址后面的密码
00003c  4a38              LDR      r2,|L3.288|
00003e  4601              MOV      r1,r0                 ;136
000040  1fd2              SUBS     r2,r2,#7
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       fill_tcp_data
000048  4601              MOV      r1,r0
;;;138        plen=fill_tcp_data_p(buf,plen,PSTR("\">[刷新]</a></small></p>\n<p><a href=\""));
00004a  a236              ADR      r2,|L3.292|
00004c  4620              MOV      r0,r4
00004e  f7fffffe          BL       fill_tcp_data_p
000052  4601              MOV      r1,r0
;;;139        // the url looks like this http://baseurl/password/command
;;;140        plen=fill_tcp_data(buf,plen,baseurl);
000054  4a32              LDR      r2,|L3.288|
000056  4620              MOV      r0,r4
000058  f7fffffe          BL       fill_tcp_data
;;;141        plen=fill_tcp_data(buf,plen,password);
00005c  4a30              LDR      r2,|L3.288|
00005e  4601              MOV      r1,r0                 ;140
000060  1fd2              SUBS     r2,r2,#7
000062  4620              MOV      r0,r4
000064  f7fffffe          BL       fill_tcp_data
000068  4601              MOV      r1,r0
;;;142        if (on_off)
00006a  b10d              CBZ      r5,|L3.112|
;;;143        {
;;;144            plen=fill_tcp_data_p(buf,plen,PSTR("/0\">关闭</a><p>"));
00006c  a237              ADR      r2,|L3.332|
00006e  e000              B        |L3.114|
                  |L3.112|
;;;145        }
;;;146        else
;;;147        {
;;;148            plen=fill_tcp_data_p(buf,plen,PSTR("/1\">开启</a><p>"));
000070  a23a              ADR      r2,|L3.348|
                  |L3.114|
000072  4620              MOV      r0,r4
000074  f7fffffe          BL       fill_tcp_data_p
000078  4601              MOV      r1,r0
;;;149        }
;;;150        plen=fill_tcp_data_p(buf,plen,PSTR("</center><hr><br>****************^_^ 欢迎您登入 xxx 电梯 用 测试平台 ^_^****************\n"));
00007a  4620              MOV      r0,r4
00007c  e8bd4070          POP      {r4-r6,lr}
000080  4a3a              LDR      r2,|L3.364|
000082  f7ffbffe          B.W      fill_tcp_data_p
;;;151        //plen=fill_tcp_data_p(buf,plen,PSTR("这是一个 web 测试程序"));
;;;152        
;;;153        return(plen);
;;;154    }
;;;155    
                          ENDP

000086  0000              DCW      0x0000
                  |L3.136|
000088  48545450          DCB      "HTTP/1.0 200 OK\r\nContent-Type: text/html\r\nPragma: n"
00008c  2f312e30
000090  20323030
000094  204f4b0d
000098  0a436f6e
00009c  74656e74
0000a0  2d547970
0000a4  653a2074
0000a8  6578742f
0000ac  68746d6c
0000b0  0d0a5072
0000b4  61676d61
0000b8  3a206e  
0000bb  6f2d6361          DCB      "o-cache\r\n\r\n",0
0000bf  6368650d
0000c3  0a0d0a00
0000c7  00                DCB      0
                  |L3.200|
0000c8  3c63656e          DCB      "<center><p> LED",215,180,204,172,214,184,202,190,": ",0
0000cc  7465723e
0000d0  3c703e20
0000d4  4c4544d7
0000d8  b4ccacd6
0000dc  b8cabe3a
0000e0  2000    
0000e2  00                DCB      0
0000e3  00                DCB      0
                  |L3.228|
0000e4  3c666f6e          DCB      "<font color=""#00FF00""> ",193,193,"</font>",0
0000e8  7420636f
0000ec  6c6f723d
0000f0  22233030
0000f4  46463030
0000f8  223e20c1
0000fc  c13c2f66
000100  6f6e743e
000104  00      
000105  00                DCB      0
000106  00                DCB      0
000107  00                DCB      0
                  |L3.264|
000108  c3f000            DCB      195,240,0
00010b  00                DCB      0
                  |L3.268|
00010c  203c736d          DCB      " <small><a href=""",0
000110  616c6c3e
000114  3c612068
000118  7265663d
00011c  2200    
00011e  00                DCB      0
00011f  00                DCB      0
                  |L3.288|
                          DCD      ||.data||+0x15
                  |L3.292|
000124  223e5bcb          DCB      """>[",203,162,208,194,"]</a></small></p>\n<p><a href="""
000128  a2d0c25d
00012c  3c2f613e
000130  3c2f736d
000134  616c6c3e
000138  3c2f703e
00013c  0a3c703e
000140  3c612068
000144  7265663d
000148  22      
000149  00                DCB      0
00014a  00                DCB      0
00014b  00                DCB      0
                  |L3.332|
00014c  2f30223e          DCB      "/0"">",185,216,177,213,"</a><p>",0
000150  b9d8b1d5
000154  3c2f613e
000158  3c703e00
                  |L3.348|
00015c  2f31223e          DCB      "/1"">",191,170,198,244,"</a><p>",0
000160  bfaac6f4
000164  3c2f613e
000168  3c703e00
                  |L3.364|
                          DCD      ||.constdata||

                          AREA ||i.verify_password||, CODE, READONLY, ALIGN=2

                  verify_password PROC
;;;62      */ 
;;;63     unsigned char verify_password(char *str)
000000  b510              PUSH     {r4,lr}
;;;64     {
;;;65         // the first characters of the received string are
;;;66         // a simple password/cookie:
;;;67         if (strncmp(password,str,5)==0)
000002  4601              MOV      r1,r0
000004  2205              MOVS     r2,#5
000006  4804              LDR      r0,|L4.24|
000008  f7fffffe          BL       strncmp
00000c  b108              CBZ      r0,|L4.18|
;;;68         {
;;;69             return(1);
;;;70         }
;;;71         return(0);
00000e  2000              MOVS     r0,#0
;;;72     }
000010  bd10              POP      {r4,pc}
                  |L4.18|
000012  2001              MOVS     r0,#1                 ;69
000014  bd10              POP      {r4,pc}
;;;73     
                          ENDP

000016  0000              DCW      0x0000
                  |L4.24|
                          DCD      ||.data||+0xe

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  buf
                          %        1501

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  3c2f6365          DCB      0x3c,0x2f,0x63,0x65
000004  6e746572          DCB      0x6e,0x74,0x65,0x72
000008  3e3c6872          DCB      0x3e,0x3c,0x68,0x72
00000c  3e3c6272          DCB      0x3e,0x3c,0x62,0x72
000010  3e2a2a2a          DCB      0x3e,0x2a,0x2a,0x2a
000014  2a2a2a2a          DCB      0x2a,0x2a,0x2a,0x2a
000018  2a2a2a2a          DCB      0x2a,0x2a,0x2a,0x2a
00001c  2a2a2a2a          DCB      0x2a,0x2a,0x2a,0x2a
000020  2a5e5f5e          DCB      0x2a,0x5e,0x5f,0x5e
000024  20bbb6d3          DCB      0x20,0xbb,0xb6,0xd3
000028  adc4fab5          DCB      0xad,0xc4,0xfa,0xb5
00002c  c7c8eb20          DCB      0xc7,0xc8,0xeb,0x20
000030  78787820          DCB      0x78,0x78,0x78,0x20
000034  b5e7ccdd          DCB      0xb5,0xe7,0xcc,0xdd
000038  20d3c320          DCB      0x20,0xd3,0xc3,0x20
00003c  b2e2cad4          DCB      0xb2,0xe2,0xca,0xd4
000040  c6bdcca8          DCB      0xc6,0xbd,0xcc,0xa8
000044  205e5f5e          DCB      0x20,0x5e,0x5f,0x5e
000048  2a2a2a2a          DCB      0x2a,0x2a,0x2a,0x2a
00004c  2a2a2a2a          DCB      0x2a,0x2a,0x2a,0x2a
000050  2a2a2a2a          DCB      0x2a,0x2a,0x2a,0x2a
000054  2a2a2a2a          DCB      0x2a,0x2a,0x2a,0x2a
000058  0a00              DCB      0x0a,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  myip
000000  c0a8010f          DCB      0xc0,0xa8,0x01,0x0f
                  mywwwport
                          DCD      0x00000050
                  mymac
000008  54555810          DCB      0x54,0x55,0x58,0x10
00000c  0024              DCB      0x00,0x24
                  password
00000e  3132              DCB      0x31,0x32
000010  33343536          DCB      0x33,0x34,0x35,0x36
000014  00                DCB      0x00
                  baseurl
000015  687474            DCB      0x68,0x74,0x74
000018  703a2f2f          DCB      0x70,0x3a,0x2f,0x2f
00001c  3139322e          DCB      0x31,0x39,0x32,0x2e
000020  3136382e          DCB      0x31,0x36,0x38,0x2e
000024  312e3135          DCB      0x31,0x2e,0x31,0x35
000028  2f00              DCB      0x2f,0x00

;*** Start embedded assembler ***

#line 1 "Source\\Net\\web_server.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___12_web_server_c_db6e9699____REV16|
#line 114 "..\\..\\..\\STM32F4\\STM32F4xx_DSP_StdPeriph_Lib_V1.0.1\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_web_server_c_db6e9699____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___12_web_server_c_db6e9699____REVSH|
#line 128
|__asm___12_web_server_c_db6e9699____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
