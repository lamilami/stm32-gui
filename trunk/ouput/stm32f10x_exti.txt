; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\ouput\stm32f10x_exti.o --depend=.\ouput\stm32f10x_exti.d --cpu=Cortex-M3 --apcs=interwork -I.\Source\APP -I.\Source\FWLib\cm3 -I.\Source\FWLib\inc -I.\Source\BSP -I.\Source\FWLib -I.\Source\Startup -I.\Source\uCOS-II\Source -I.\Source\uCOS-II\uC-CPU -I.\Source\uCOS-II\uC-LIB -I.\Source\uCOS-II\Ports -I.\Source\uCGUI\Config -I.\Source\uCGUI\emWinDemo -I.\Source\uCGUI\LCDDriver -I.\Source\uCGUI\uCGUIDemo -I.\Source\uCGUI\LCDDriver\Touch -I.\Source\uCOS-II\Source -I.\Source\uCGUI\Core -I.\Source\uCGUI\WM -I.\Source\uCGUI\Widget -I.\Source\uCGUI\GUIDemo -I.\Source\SDHC\driver -I.\Source\SDHC\fatfs -I.\Source\gui_app -I.\Source\gui_app\pinyin -I.\Source\uCGUI\TouchCalibration -I.\Source\Mot -I.\Source\Net -I.\Source\STM32F10x_DSP_Lib\src\asm\arm -I.\Source\STM32F10x_DSP_Lib\inc -I..\..\..\STM32F4\STM32F4xx_DSP_StdPeriph_Lib_V1.0.1\Libraries\CMSIS\Lib\ARM -I..\..\..\STM32F4\STM32F4xx_DSP_StdPeriph_Lib_V1.0.1\Libraries\CMSIS\Include -I.\Source\Lib -ID:\Keil_ARM\ARM\INC -ID:\Keil_ARM\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_XL -DUSE_STDPERIPH_DRIVER -DARM_MATH_CM3 --omf_browse=.\ouput\stm32f10x_exti.crf Source\FWLib\src\stm32f10x_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;207      */
;;;208    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;209    {
;;;210      /* Check the parameters */
;;;211      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;212      
;;;213      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;214    }
000004  4770              BX       lr
;;;215    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;247      */
;;;248    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;249    {
;;;250      /* Check the parameters */
;;;251      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;252      
;;;253      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;254    }
000004  4770              BX       lr
;;;255    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;83       */
;;;84     void EXTI_DeInit(void)
000000  4804              LDR      r0,|L3.20|
;;;85     {
;;;86       EXTI->IMR = 0x00000000;
000002  2100              MOVS     r1,#0
000004  6001              STR      r1,[r0,#0]
;;;87       EXTI->EMR = 0x00000000;
000006  6041              STR      r1,[r0,#4]
;;;88       EXTI->RTSR = 0x00000000; 
000008  6081              STR      r1,[r0,#8]
;;;89       EXTI->FTSR = 0x00000000; 
00000a  60c1              STR      r1,[r0,#0xc]
;;;90       EXTI->PR = 0x000FFFFF;
00000c  4902              LDR      r1,|L3.24|
00000e  6141              STR      r1,[r0,#0x14]
;;;91     }
000010  4770              BX       lr
;;;92     
                          ENDP

000012  0000              DCW      0x0000
                  |L3.20|
                          DCD      0x40010400
                  |L3.24|
                          DCD      0x000fffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;169      */
;;;170    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;171    {
;;;172      /* Check the parameters */
;;;173      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;174      
;;;175      EXTI->SWIER |= EXTI_Line;
000002  680a              LDR      r2,[r1,#0]
000004  ea420200          ORR      r2,r2,r0
000008  600a              STR      r2,[r1,#0]
;;;176    }
00000a  4770              BX       lr
;;;177    
                          ENDP

                  |L4.12|
                          DCD      0x40010410

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;184      */
;;;185    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4a03              LDR      r2,|L5.16|
;;;186    {
000002  4601              MOV      r1,r0
;;;187      FlagStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;188      /* Check the parameters */
;;;189      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;190      
;;;191      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000006  6812              LDR      r2,[r2,#0]
000008  420a              TST      r2,r1
00000a  d000              BEQ      |L5.14|
;;;192      {
;;;193        bitstatus = SET;
00000c  2001              MOVS     r0,#1
                  |L5.14|
;;;194      }
;;;195      else
;;;196      {
;;;197        bitstatus = RESET;
;;;198      }
;;;199      return bitstatus;
;;;200    }
00000e  4770              BX       lr
;;;201    
                          ENDP

                  |L5.16|
                          DCD      0x40010414

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;222      */
;;;223    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4b06              LDR      r3,|L6.28|
;;;224    {
000002  4601              MOV      r1,r0
;;;225      ITStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;226      uint32_t enablestatus = 0;
;;;227      /* Check the parameters */
;;;228      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;229      
;;;230      enablestatus =  EXTI->IMR & EXTI_Line;
000006  681a              LDR      r2,[r3,#0]
;;;231      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
000008  695b              LDR      r3,[r3,#0x14]
00000a  ea020201          AND      r2,r2,r1              ;230
00000e  420b              TST      r3,r1
000010  d002              BEQ      |L6.24|
000012  2a00              CMP      r2,#0
000014  d000              BEQ      |L6.24|
;;;232      {
;;;233        bitstatus = SET;
000016  2001              MOVS     r0,#1
                  |L6.24|
;;;234      }
;;;235      else
;;;236      {
;;;237        bitstatus = RESET;
;;;238      }
;;;239      return bitstatus;
;;;240    }
000018  4770              BX       lr
;;;241    
                          ENDP

00001a  0000              DCW      0x0000
                  |L6.28|
                          DCD      0x40010400

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;99       */
;;;100    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  b530              PUSH     {r4,r5,lr}
;;;101    {
;;;102      uint32_t tmp = 0;
;;;103    
;;;104      /* Check the parameters */
;;;105      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;106      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;107      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;108      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;109    
;;;110      tmp = (uint32_t)EXTI_BASE;
000002  4a1f              LDR      r2,|L7.128|
;;;111         
;;;112      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000004  7981              LDRB     r1,[r0,#6]
000006  6803              LDR      r3,[r0,#0]
000008  b399              CBZ      r1,|L7.114|
00000a  4611              MOV      r1,r2
;;;113      {
;;;114        /* Clear EXTI line configuration */
;;;115        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
00000c  680c              LDR      r4,[r1,#0]
00000e  ea240403          BIC      r4,r4,r3
000012  600c              STR      r4,[r1,#0]
;;;116        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000014  684b              LDR      r3,[r1,#4]
000016  6804              LDR      r4,[r0,#0]
000018  ea230304          BIC      r3,r3,r4
00001c  604b              STR      r3,[r1,#4]
;;;117        
;;;118        tmp += EXTI_InitStruct->EXTI_Mode;
00001e  7904              LDRB     r4,[r0,#4]
000020  eb040302          ADD      r3,r4,r2
;;;119    
;;;120        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000024  681c              LDR      r4,[r3,#0]
000026  6805              LDR      r5,[r0,#0]
000028  ea440405          ORR      r4,r4,r5
00002c  601c              STR      r4,[r3,#0]
;;;121    
;;;122        /* Clear Rising Falling edge configuration */
;;;123        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
00002e  688b              LDR      r3,[r1,#8]
000030  6804              LDR      r4,[r0,#0]
000032  ea230304          BIC      r3,r3,r4
000036  608b              STR      r3,[r1,#8]
;;;124        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
000038  68cb              LDR      r3,[r1,#0xc]
00003a  6804              LDR      r4,[r0,#0]
00003c  ea230304          BIC      r3,r3,r4
000040  60cb              STR      r3,[r1,#0xc]
;;;125        
;;;126        /* Select the trigger for the selected external interrupts */
;;;127        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
000042  7943              LDRB     r3,[r0,#5]
000044  f5a16180          SUB      r1,r1,#0x400          ;124
000048  2b10              CMP      r3,#0x10
00004a  d005              BEQ      |L7.88|
;;;128        {
;;;129          /* Rising Falling edge */
;;;130          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
;;;131          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
;;;132        }
;;;133        else
;;;134        {
;;;135          tmp = (uint32_t)EXTI_BASE;
;;;136          tmp += EXTI_InitStruct->EXTI_Trigger;
00004c  1899              ADDS     r1,r3,r2
;;;137    
;;;138          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
00004e  680a              LDR      r2,[r1,#0]
000050  6800              LDR      r0,[r0,#0]
000052  4302              ORRS     r2,r2,r0
000054  600a              STR      r2,[r1,#0]
;;;139        }
;;;140      }
;;;141      else
;;;142      {
;;;143        tmp += EXTI_InitStruct->EXTI_Mode;
;;;144    
;;;145        /* Disable the selected external lines */
;;;146        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
;;;147      }
;;;148    }
000056  bd30              POP      {r4,r5,pc}
                  |L7.88|
000058  f5016181          ADD      r1,r1,#0x408
00005c  680a              LDR      r2,[r1,#0]            ;130
00005e  6803              LDR      r3,[r0,#0]            ;130
000060  ea420203          ORR      r2,r2,r3              ;130
000064  600a              STR      r2,[r1,#0]            ;130
000066  684a              LDR      r2,[r1,#4]            ;131
000068  6800              LDR      r0,[r0,#0]            ;131
00006a  ea420200          ORR      r2,r2,r0              ;131
00006e  604a              STR      r2,[r1,#4]            ;131
                  |L7.112|
000070  bd30              POP      {r4,r5,pc}
                  |L7.114|
000072  e7ff              B        |L7.116|
                  |L7.116|
000074  7900              LDRB     r0,[r0,#4]            ;143
000076  4410              ADD      r0,r0,r2              ;143
000078  6801              LDR      r1,[r0,#0]            ;146
00007a  4399              BICS     r1,r1,r3              ;146
00007c  6001              STR      r1,[r0,#0]            ;146
00007e  e7f7              B        |L7.112|
;;;149    
                          ENDP

                  |L7.128|
                          DCD      0x40010400

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;155      */
;;;156    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;157    {
;;;158      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
;;;159      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000002  6001              STR      r1,[r0,#0]
000004  7101              STRB     r1,[r0,#4]
;;;160      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  220c              MOVS     r2,#0xc
000008  7142              STRB     r2,[r0,#5]
;;;161      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  7181              STRB     r1,[r0,#6]
;;;162    }
00000c  4770              BX       lr
;;;163    
                          ENDP


;*** Start embedded assembler ***

#line 1 "Source\\FWLib\\src\\stm32f10x_exti.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_stm32f10x_exti_c_28b3b60e____REV16|
#line 114 "..\\..\\..\\STM32F4\\STM32F4xx_DSP_StdPeriph_Lib_V1.0.1\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f10x_exti_c_28b3b60e____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_stm32f10x_exti_c_28b3b60e____REVSH|
#line 128
|__asm___16_stm32f10x_exti_c_28b3b60e____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
