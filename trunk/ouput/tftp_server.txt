; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\ouput\tftp_server.o --depend=.\ouput\tftp_server.d --cpu=Cortex-M3 --apcs=interwork -I.\Source\APP -I.\Source\FWLib\cm3 -I.\Source\FWLib\inc -I.\Source\BSP -I.\Source\FWLib -I.\Source\Startup -I.\Source\uCOS-II\Source -I.\Source\uCOS-II\uC-CPU -I.\Source\uCOS-II\uC-LIB -I.\Source\uCOS-II\Ports -I.\Source\uCGUI\Config -I.\Source\uCGUI\emWinDemo -I.\Source\uCGUI\LCDDriver -I.\Source\uCGUI\uCGUIDemo -I.\Source\uCGUI\LCDDriver\Touch -I.\Source\uCOS-II\Source -I.\Source\uCGUI\Core -I.\Source\uCGUI\WM -I.\Source\uCGUI\Widget -I.\Source\uCGUI\GUIDemo -I.\Source\SDHC\driver -I.\Source\SDHC\fatfs -I.\Source\gui_app -I.\Source\gui_app\pinyin -I.\Source\uCGUI\TouchCalibration -I.\Source\Mot -I.\Source\Net -I.\Source\STM32F10x_DSP_Lib\src\asm\arm -I.\Source\STM32F10x_DSP_Lib\inc -I..\..\..\STM32F4\STM32F4xx_DSP_StdPeriph_Lib_V1.0.1\Libraries\CMSIS\Lib\ARM -I..\..\..\STM32F4\STM32F4xx_DSP_StdPeriph_Lib_V1.0.1\Libraries\CMSIS\Include -I.\Source\Lib -ID:\Keil_ARM\ARM\INC -ID:\Keil_ARM\ARM\INC\ST\STM32F10x -D__MICROLIB -DSTM32F10X_XL -DUSE_STDPERIPH_DRIVER -DARM_MATH_CM3 --omf_browse=.\ouput\tftp_server.crf Source\Net\tftp_server.c]
                          THUMB

                          AREA ||i.ack_exc||, CODE, READONLY, ALIGN=2

                  ack_exc PROC
;;;137    
;;;138    char ack_exc(unsigned char* buf)
000000  b5f8              PUSH     {r3-r7,lr}
;;;139    {
000002  4604              MOV      r4,r0
;;;140    	unsigned int k,n,l,r_res,br;
;;;141    
;;;142    	k =   *(buf+BLOCK_LOC_H);
000004  f890002c          LDRB     r0,[r0,#0x2c]
;;;143    	n =   *(buf+BLOCK_LOC_L);
000008  f894102d          LDRB     r1,[r4,#0x2d]
;;;144    	l = (k<<8)+n;
;;;145    	
;;;146    //	if(tftp_pack.trans_end !=0)
;;;147    	if(tftp_pack.current_file_size == 512)
00000c  4d16              LDR      r5,|L1.104|
00000e  eb012100          ADD      r1,r1,r0,LSL #8       ;144
000012  f44f7600          MOV      r6,#0x200
000016  f8d5022c          LDR      r0,[r5,#0x22c]  ; tftp_pack
00001a  42b0              CMP      r0,r6
00001c  d11e              BNE      |L1.92|
;;;148    	{
;;;149    	tftp_pack.block_No = l+1;
00001e  1c48              ADDS     r0,r1,#1
000020  6268              STR      r0,[r5,#0x24]  ; tftp_pack
000022  f505720c          ADD      r2,r5,#0x230
000026  2000              MOVS     r0,#0
;;;150    	tftp_timer_refush();
;;;151    	f_lseek(&fsrc, l*512);
000028  6050              STR      r0,[r2,#4]  ; tftp_timer
00002a  0249              LSLS     r1,r1,#9
00002c  480f              LDR      r0,|L1.108|
00002e  f7fffffe          BL       f_lseek
;;;152    	r_res = f_read (&fsrc,tftp_pack.file_content,512,&br);
000032  466b              MOV      r3,sp
000034  4632              MOV      r2,r6
000036  f1050128          ADD      r1,r5,#0x28
00003a  480c              LDR      r0,|L1.108|
00003c  f7fffffe          BL       f_read
;;;153    	if(r_res)
000040  b128              CBZ      r0,|L1.78|
;;;154    	{
;;;155    		error_exc(buf,FILE_READ_ERR);
000042  2103              MOVS     r1,#3
000044  4620              MOV      r0,r4
000046  f7fffffe          BL       error_exc
;;;156    	    return -1;
00004a  20ff              MOVS     r0,#0xff
;;;157    	}
;;;158    		tftp_pack.current_file_size = br;	
;;;159    	
;;;160    	data_exc(buf);
;;;161    	return 0;
;;;162    	}else{
;;;163    	
;;;164    	f_close(&fsrc);
;;;165    	//f_mount(0, NULL);
;;;166    
;;;167    	}
;;;168    
;;;169    	return 0;
;;;170    }
00004c  bdf8              POP      {r3-r7,pc}
                  |L1.78|
00004e  9800              LDR      r0,[sp,#0]            ;158
000050  f8c5022c          STR      r0,[r5,#0x22c]        ;160  ; tftp_pack
000054  4620              MOV      r0,r4                 ;160
000056  f7fffffe          BL       data_exc
00005a  e002              B        |L1.98|
                  |L1.92|
00005c  4803              LDR      r0,|L1.108|
00005e  f7fffffe          BL       f_close
                  |L1.98|
000062  2000              MOVS     r0,#0                 ;169
000064  bdf8              POP      {r3-r7,pc}
;;;171    
                          ENDP

000066  0000              DCW      0x0000
                  |L1.104|
                          DCD      ||.bss||
                  |L1.108|
                          DCD      fsrc

                          AREA ||i.data_exc||, CODE, READONLY, ALIGN=2

                  data_exc PROC
;;;119    
;;;120    char data_exc(unsigned char* buf)
000000  b530              PUSH     {r4,r5,lr}
;;;121    {
000002  f5ad7d01          SUB      sp,sp,#0x204
000006  4605              MOV      r5,r0
;;;122    	int i;
;;;123    	char packet[516];
;;;124    	packet[0] = 0;
000008  2000              MOVS     r0,#0
00000a  f88d0000          STRB     r0,[sp,#0]
;;;125    	packet[1] = DATA;
00000e  2103              MOVS     r1,#3
000010  f88d1001          STRB     r1,[sp,#1]
;;;126    	packet[2] = 0;
;;;127    	packet[3] = tftp_pack.block_No ;
000014  4c0e              LDR      r4,|L2.80|
000016  f88d0002          STRB     r0,[sp,#2]            ;126
;;;128    	
;;;129    	tftp_set_data_message(packet,tftp_pack.file_content, tftp_pack.current_file_size);
00001a  f1040128          ADD      r1,r4,#0x28
00001e  6a60              LDR      r0,[r4,#0x24]         ;127  ; tftp_pack
000020  f88d0003          STRB     r0,[sp,#3]            ;127
000024  4668              MOV      r0,sp
000026  f8d4222c          LDR      r2,[r4,#0x22c]  ; tftp_pack
00002a  f7fffffe          BL       tftp_set_data_message
;;;130    	
;;;131    	make_udp_reply_from_request(buf,packet,tftp_pack.current_file_size+4,TFTP_PORT);
00002e  f8d4222c          LDR      r2,[r4,#0x22c]  ; tftp_pack
000032  2345              MOVS     r3,#0x45
000034  1d12              ADDS     r2,r2,#4
000036  4669              MOV      r1,sp
000038  4628              MOV      r0,r5
00003a  f7fffffe          BL       make_udp_reply_from_request
00003e  f504710c          ADD      r1,r4,#0x230
000042  2001              MOVS     r0,#1
;;;132    
;;;133    	tftp_timer_enable();
;;;134    
;;;135    	return 0;
000044  6008              STR      r0,[r1,#0]  ; tftp_timer
;;;136    }
000046  f50d7d01          ADD      sp,sp,#0x204
00004a  2000              MOVS     r0,#0                 ;135
00004c  bd30              POP      {r4,r5,pc}
;;;137    
                          ENDP

00004e  0000              DCW      0x0000
                  |L2.80|
                          DCD      ||.bss||

                          AREA ||i.error_exc||, CODE, READONLY, ALIGN=2

                  error_exc PROC
;;;49     
;;;50     char error_exc(unsigned char* buf,S_ERROR err_code)
000000  b510              PUSH     {r4,lr}
;;;51     {
000002  b088              SUB      sp,sp,#0x20
;;;52     
;;;53     	char sbuf[30];
;;;54     	sbuf[0] = 0;
000004  2200              MOVS     r2,#0
000006  4604              MOV      r4,r0                 ;51
000008  f88d2000          STRB     r2,[sp,#0]
;;;55     	sbuf[1] = ERR;
00000c  2005              MOVS     r0,#5
00000e  f88d0001          STRB     r0,[sp,#1]
;;;56     	sbuf[2] = 0;
000012  f88d2002          STRB     r2,[sp,#2]
;;;57     	sbuf[3] = err_code;
;;;58         
;;;59         sbuf[4] =0; 
000016  f88d2004          STRB     r2,[sp,#4]
00001a  f88d1003          STRB     r1,[sp,#3]            ;57
;;;60     
;;;61     	sbuf[5] = 0;
00001e  f88d2005          STRB     r2,[sp,#5]
;;;62     
;;;63     	f_close(&fsrc);
000022  4808              LDR      r0,|L3.68|
000024  f7fffffe          BL       f_close
;;;64     	f_mount(0, NULL);
000028  2100              MOVS     r1,#0
00002a  4608              MOV      r0,r1
00002c  f7fffffe          BL       f_mount
;;;65     
;;;66     	make_udp_reply_from_request(buf,sbuf,20,TFTP_PORT);	
000030  2345              MOVS     r3,#0x45
000032  2214              MOVS     r2,#0x14
000034  4669              MOV      r1,sp
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       make_udp_reply_from_request
;;;67     	return 0;
;;;68     }
00003c  b008              ADD      sp,sp,#0x20
00003e  2000              MOVS     r0,#0                 ;67
000040  bd10              POP      {r4,pc}
;;;69     
                          ENDP

000042  0000              DCW      0x0000
                  |L3.68|
                          DCD      fsrc

                          AREA ||i.rrq_wrq_exc||, CODE, READONLY, ALIGN=2

                  rrq_wrq_exc PROC
;;;79     
;;;80     char rrq_wrq_exc(unsigned char* buf)
000000  b5f8              PUSH     {r3-r7,lr}
;;;81     {
;;;82     	int i,j,r_res;
;;;83     	int br;
;;;84     	unsigned char res;
;;;85     	tftp_pack.op_code = *(buf+OP_CODE_LOC);
000002  4e21              LDR      r6,|L4.136|
000004  4605              MOV      r5,r0                 ;81
000006  f890002b          LDRB     r0,[r0,#0x2b]
;;;86     
;;;87     	//strcpy(tftp_pack.file_name, buf + NAME_LOC);
;;;88     	for(i=0;*(buf+NAME_LOC+i)!='\0';i++)
00000a  6030              STR      r0,[r6,#0]  ; tftp_pack
00000c  2000              MOVS     r0,#0
00000e  e002              B        |L4.22|
                  |L4.16|
;;;89     	 tftp_pack.file_name[i] = *(buf+NAME_LOC+i);
000010  1832              ADDS     r2,r6,r0
000012  1c40              ADDS     r0,r0,#1              ;88
000014  7111              STRB     r1,[r2,#4]
                  |L4.22|
000016  182c              ADDS     r4,r5,r0              ;88
000018  f894102c          LDRB     r1,[r4,#0x2c]         ;88
00001c  2900              CMP      r1,#0                 ;88
00001e  d1f7              BNE      |L4.16|
;;;90     
;;;91     	if(tftp_pack.op_code == RRQ)
000020  6830              LDR      r0,[r6,#0]  ; tftp_pack
000022  2801              CMP      r0,#1
000024  d12d              BNE      |L4.130|
;;;92        {
;;;93     	res = f_open(&fsrc,tftp_pack.file_name,FA_READ) ;
000026  2201              MOVS     r2,#1
000028  1d31              ADDS     r1,r6,#4
00002a  4818              LDR      r0,|L4.140|
00002c  f7fffffe          BL       f_open
;;;94     	if(res)
000030  b108              CBZ      r0,|L4.54|
;;;95     	{
;;;96     		error_exc(buf,FILE_NOT_FOUND);
000032  2102              MOVS     r1,#2
;;;97     		return -1;	
000034  e00d              B        |L4.82|
                  |L4.54|
;;;98     	}else{
;;;99     		f_lseek(&fsrc, 0);
000036  2100              MOVS     r1,#0
000038  4814              LDR      r0,|L4.140|
00003a  f7fffffe          BL       f_lseek
;;;100    		r_res = f_read (&fsrc,tftp_pack.file_content,512,&br);
00003e  4912              LDR      r1,|L4.136|
000040  466b              MOV      r3,sp
000042  f44f7200          MOV      r2,#0x200
000046  3128              ADDS     r1,r1,#0x28
000048  4810              LDR      r0,|L4.140|
00004a  f7fffffe          BL       f_read
;;;101    		if(r_res)
00004e  b128              CBZ      r0,|L4.92|
;;;102    		{
;;;103    		error_exc(buf,FILE_READ_ERR);
000050  2103              MOVS     r1,#3
                  |L4.82|
000052  4628              MOV      r0,r5
000054  f7fffffe          BL       error_exc
;;;104    		return -1;
000058  20ff              MOVS     r0,#0xff
;;;105    		}
;;;106    		tftp_pack.current_file_size = br;
;;;107    	}
;;;108    		
;;;109    	for(j=0; (*(buf+NAME_LOC+1+i+j)!='\0')&&(j<10);j++)
;;;110    	tftp_pack.mode[j] =	*(buf+NAME_LOC+i+1+j);
;;;111    
;;;112    	tftp_pack.block_No = 1;
;;;113    
;;;114    	data_exc(buf);
;;;115    	
;;;116       }
;;;117    	return 0;
;;;118    }
00005a  bdf8              POP      {r3-r7,pc}
                  |L4.92|
00005c  9800              LDR      r0,[sp,#0]            ;106
00005e  2200              MOVS     r2,#0                 ;109
000060  f8c6022c          STR      r0,[r6,#0x22c]        ;109  ; tftp_pack
000064  e002              B        |L4.108|
                  |L4.102|
000066  18b1              ADDS     r1,r6,r2              ;110
000068  1c52              ADDS     r2,r2,#1              ;109
00006a  7608              STRB     r0,[r1,#0x18]         ;110
                  |L4.108|
00006c  18a0              ADDS     r0,r4,r2              ;109
00006e  f890002d          LDRB     r0,[r0,#0x2d]         ;109
000072  b108              CBZ      r0,|L4.120|
000074  2a0a              CMP      r2,#0xa               ;109
000076  dbf6              BLT      |L4.102|
                  |L4.120|
000078  2001              MOVS     r0,#1                 ;112
00007a  6270              STR      r0,[r6,#0x24]         ;114  ; tftp_pack
00007c  4628              MOV      r0,r5                 ;114
00007e  f7fffffe          BL       data_exc
                  |L4.130|
000082  2000              MOVS     r0,#0                 ;117
000084  bdf8              POP      {r3-r7,pc}
;;;119    
                          ENDP

000086  0000              DCW      0x0000
                  |L4.136|
                          DCD      ||.bss||
                  |L4.140|
                          DCD      fsrc

                          AREA ||i.tftp_exc||, CODE, READONLY, ALIGN=1

                  tftp_exc PROC
;;;171    
;;;172    char  tftp_exc(unsigned char* buf)
000000  b510              PUSH     {r4,lr}
;;;173    {
;;;174    	int op_code ;
;;;175    	op_code = *(buf+OP_CODE_LOC);
000002  f890102b          LDRB     r1,[r0,#0x2b]
;;;176    
;;;177    	if((op_code == RRQ)||(op_code == WRQ))
000006  2901              CMP      r1,#1
000008  d006              BEQ      |L5.24|
00000a  2902              CMP      r1,#2
00000c  d004              BEQ      |L5.24|
;;;178    	{
;;;179    	rrq_wrq_exc(buf);
;;;180    
;;;181    	}else if(op_code == DATA){
00000e  2903              CMP      r1,#3
000010  d005              BEQ      |L5.30|
;;;182    
;;;183    	data_exc(buf);
;;;184    
;;;185    	}else if(op_code == ACK){
000012  2904              CMP      r1,#4
000014  d006              BEQ      |L5.36|
000016  e007              B        |L5.40|
                  |L5.24|
000018  f7fffffe          BL       rrq_wrq_exc
00001c  e004              B        |L5.40|
                  |L5.30|
00001e  f7fffffe          BL       data_exc
000022  e001              B        |L5.40|
                  |L5.36|
;;;186    
;;;187    	ack_exc(buf);
000024  f7fffffe          BL       ack_exc
                  |L5.40|
;;;188    
;;;189    	} 
;;;190    
;;;191    	return OP_ERR;
000028  2000              MOVS     r0,#0
;;;192    }
00002a  bd10              POP      {r4,pc}
;;;193    
                          ENDP


                          AREA ||i.tftp_init||, CODE, READONLY, ALIGN=2

                  tftp_init PROC
;;;193    
;;;194    void tftp_init(void)
000000  4901              LDR      r1,|L6.8|
;;;195    {
;;;196       f_mount(0, &fs);
000002  2000              MOVS     r0,#0
000004  f7ffbffe          B.W      f_mount
;;;197    }
;;;198    
                          ENDP

                  |L6.8|
                          DCD      ||fs||

                          AREA ||i.tftp_timer_disable||, CODE, READONLY, ALIGN=2

                  tftp_timer_disable PROC
;;;42     
;;;43     void tftp_timer_disable(void)
000000  4901              LDR      r1,|L7.8|
;;;44     {
;;;45     	tftp_timer.enable = 0;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]  ; tftp_timer
;;;46     }
000006  4770              BX       lr
;;;47     
                          ENDP

                  |L7.8|
                          DCD      ||.bss||+0x230

                          AREA ||i.tftp_timer_enable||, CODE, READONLY, ALIGN=2

                  tftp_timer_enable PROC
;;;36     
;;;37     void tftp_timer_enable(void)
000000  4901              LDR      r1,|L8.8|
;;;38     {
;;;39     	tftp_timer.enable = 1;
000002  2001              MOVS     r0,#1
000004  6008              STR      r0,[r1,#0]  ; tftp_timer
;;;40     }
000006  4770              BX       lr
;;;41     
                          ENDP

                  |L8.8|
                          DCD      ||.bss||+0x230

                          AREA ||i.tftp_timer_over||, CODE, READONLY, ALIGN=2

                  tftp_timer_over PROC
;;;69     
;;;70     void tftp_timer_over(unsigned char* buf)
000000  b510              PUSH     {r4,lr}
;;;71     {
;;;72     	error_exc(buf,TIMER_OUT_ERR);
000002  2101              MOVS     r1,#1
000004  f7fffffe          BL       error_exc
;;;73     	tftp_timer.enable = 0;
000008  4802              LDR      r0,|L9.20|
00000a  2100              MOVS     r1,#0
;;;74     	tftp_timer.data = 0;	
00000c  6001              STR      r1,[r0,#0]  ; tftp_timer
00000e  6041              STR      r1,[r0,#4]  ; tftp_timer
;;;75     }
000010  bd10              POP      {r4,pc}
;;;76     
                          ENDP

000012  0000              DCW      0x0000
                  |L9.20|
                          DCD      ||.bss||+0x230

                          AREA ||i.tftp_timer_refush||, CODE, READONLY, ALIGN=2

                  tftp_timer_refush PROC
;;;20     
;;;21     void tftp_timer_refush(void)
000000  4901              LDR      r1,|L10.8|
;;;22     {
;;;23     	tftp_timer.data = 0;
000002  2000              MOVS     r0,#0
000004  6048              STR      r0,[r1,#4]  ; tftp_timer
;;;24     }
000006  4770              BX       lr
;;;25     
                          ENDP

                  |L10.8|
                          DCD      ||.bss||+0x230

                          AREA ||i.tftp_timer_run||, CODE, READONLY, ALIGN=2

                  tftp_timer_run PROC
;;;25     
;;;26     void tftp_timer_run(unsigned char* buf)
000000  4a06              LDR      r2,|L11.28|
;;;27     {
;;;28        if(tftp_timer.enable)
000002  6811              LDR      r1,[r2,#0]  ; tftp_timer
000004  2900              CMP      r1,#0
000006  d007              BEQ      |L11.24|
;;;29        {  
;;;30        	if(tftp_timer.data++ >= tftp_timer.over)
000008  6851              LDR      r1,[r2,#4]  ; tftp_timer
00000a  1c4b              ADDS     r3,r1,#1
00000c  6053              STR      r3,[r2,#4]  ; tftp_timer
00000e  68d2              LDR      r2,[r2,#0xc]  ; tftp_timer
000010  4291              CMP      r1,r2
000012  db01              BLT      |L11.24|
;;;31     	{
;;;32     	  tftp_timer_over(buf);
000014  f7ffbffe          B.W      tftp_timer_over
                  |L11.24|
;;;33     	}
;;;34        }
;;;35     }
000018  4770              BX       lr
;;;36     
                          ENDP

00001a  0000              DCW      0x0000
                  |L11.28|
                          DCD      ||.bss||+0x230

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  tftp_pack
                          %        560
                  tftp_timer
                          %        16

;*** Start embedded assembler ***

#line 1 "Source\\Net\\tftp_server.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___13_tftp_server_c_e5d2d1ce____REV16|
#line 114 "..\\..\\..\\STM32F4\\STM32F4xx_DSP_StdPeriph_Lib_V1.0.1\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_tftp_server_c_e5d2d1ce____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___13_tftp_server_c_e5d2d1ce____REVSH|
#line 128
|__asm___13_tftp_server_c_e5d2d1ce____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
